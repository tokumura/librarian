/*
 * This file is generated by jOOQ.
 */
package com.tokumura.librarian.infrastructure.database.jooq.tables.records


import com.tokumura.librarian.infrastructure.database.jooq.tables.Book

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BookRecord private constructor() : UpdatableRecordImpl<BookRecord>(Book.BOOK) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var title: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var authorId: Int
        set(value): Unit = set(2, value)
        get(): Int = get(2) as Int

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised BookRecord
     */
    constructor(id: Int? = null, title: String, authorId: Int): this() {
        this.id = id
        this.title = title
        this.authorId = authorId
        resetChangedOnNotNull()
    }
}
